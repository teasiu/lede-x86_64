From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: teasiu <teasiu@qq.com>
Date: Thu, 8 Apr 2021 15:27:06 +0800
Subject: [PATCH] set default newifi3

Signed-off-by: teasiu <teasiu@qq.com>
---
 feeds.conf.default                            |   2 +-
 include/target.mk                             |   7 +-
 package/base-files/files/bin/AutoUpdate.sh    | 310 ++++++++++++++++++
 package/base-files/files/bin/config_generate  |   3 +-
 package/base-files/files/etc/passwd           |   2 +-
 package/base-files/files/etc/profile          |  16 +
 .../mac80211/files/lib/wifi/mac80211.sh       |   5 +-
 .../config/firewall/files/firewall.config     |  30 ++
 .../network/services/dnsmasq/files/dhcp.conf  |  21 ++
 .../services/uhttpd/files/uhttpd.config       |   9 +-
 target/linux/x86/Makefile                     |   2 +-
 11 files changed, 396 insertions(+), 11 deletions(-)
 create mode 100755 package/base-files/files/bin/AutoUpdate.sh

diff --git a/feeds.conf.default b/feeds.conf.default
index fc1424dea..2cdb1d393 100644
--- a/feeds.conf.default
+++ b/feeds.conf.default
@@ -7,4 +7,4 @@ src-git telephony https://git.openwrt.org/feed/telephony.git
 #src-git management https://github.com/openwrt-management/packages.git
 #src-git oldpackages http://git.openwrt.org/packages.git
 #src-link custom /usr/src/openwrt/custom-feed
-#src-git helloworld https://github.com/fw876/helloworld
+src-git helloworld https://github.com/fw876/helloworld
diff --git a/include/target.mk b/include/target.mk
index 4ffbe2985..e65bfebd9 100644
--- a/include/target.mk
+++ b/include/target.mk
@@ -13,13 +13,12 @@ __target_inc=1
 DEVICE_TYPE?=router
 
 # Default packages - the really basic set
-DEFAULT_PACKAGES:=base-files libc libgcc busybox dropbear mtd uci opkg netifd fstools uclient-fetch logd urandom-seed urngd \
+DEFAULT_PACKAGES:=base-files bash libc libgcc busybox dropbear mtd uci opkg netifd fstools uclient-fetch logd urandom-seed urngd \
 block-mount coremark kmod-nf-nathelper kmod-nf-nathelper-extra kmod-ipt-raw wget libustream-openssl ca-certificates \
-default-settings luci luci-app-ddns luci-app-upnp luci-app-autoreboot luci-app-webadmin \
+default-settings luci luci-app-upnp luci-app-autoreboot luci-app-webadmin \
 luci-app-filetransfer luci-app-vsftpd luci-app-ssr-plus luci-app-unblockmusic \
 luci-app-arpbind luci-app-vlmcsd luci-app-wol luci-app-ramfree \
-luci-app-sfe luci-app-nlbwmon luci-app-accesscontrol luci-app-cpufreq \
-ddns-scripts_aliyun ddns-scripts_dnspod
+luci-app-sfe luci-app-nlbwmon luci-app-accesscontrol luci-app-cpufreq openssl-utils
 # For the basic set
 DEFAULT_PACKAGES.basic:=
 # For nas targets
diff --git a/package/base-files/files/bin/AutoUpdate.sh b/package/base-files/files/bin/AutoUpdate.sh
new file mode 100755
index 000000000..e2be38b46
--- /dev/null
+++ b/package/base-files/files/bin/AutoUpdate.sh
@@ -0,0 +1,310 @@
+#!/bin/bash
+# https://github.com/Hyy2001X/AutoBuild-Actions
+# AutoBuild Module by Hyy2001
+# AutoUpdate for Openwrt
+
+Version=V5.5
+
+Shell_Helper() {
+	echo -e "\n使用方法: bash /bin/AutoUpdate.sh [参数1] [参数2]"
+	echo -e "\n支持下列参数:\n"
+	echo "	-q	更新固件,不打印备份信息日志 [保留配置]"
+	echo "	-n	更新固件 [不保留配置]"
+	echo "	-f	强制更新固件,即跳过版本号验证,自动下载以及安装必要软件包 [保留配置]"
+	echo "	-u	适用于定时更新 LUCI 的参数 [保留配置]"
+	echo "	-c	[参数2:<Github 地址>] 更换 Github 检查更新以及固件下载地址"
+	echo "	-b	[参数2:<引导方式 UEFI/Legacy>] 指定 x86 设备下载使用 UEFI/Legacy 引导的固件 [危险]"
+	echo "	-l	列出所有信息"
+	echo "	-d	清除固件下载缓存"
+	echo -e "	-h	打印帮助信息\n"
+	exit
+}
+
+List_Info() {
+	echo -e "\n/overlay 可用:	${Overlay_Available}"
+	echo "/tmp 可用:	${TMP_Available}M"
+	echo "固件下载位置:	/tmp/Downloads"
+	echo "当前设备:	${CURRENT_Device}"
+	echo "默认设备:	${DEFAULT_Device}"
+	echo "当前固件版本:	${CURRENT_Version}"
+	echo "固件名称:	AutoBuild-${CURRENT_Device}-${CURRENT_Version}${Firmware_SFX}"
+	echo "Github 地址:	${Github}"
+	echo "解析 API 地址:	${Github_Tags}"
+	echo "固件下载地址:	${Github_Download}"
+	echo "作者/仓库:	${Author}"
+	if [[ ${DEFAULT_Device} == "x86_64" ]];then
+		echo "EFI 引导: 	${EFI_Boot}"
+		echo "固件压缩:	${Compressed_x86}"
+	fi
+	echo "固件格式:	${Firmware_SFX}"
+	exit
+}
+
+Install_Pkg() {
+	PKG_NAME=${1}
+	grep "${PKG_NAME}" /tmp/Package_list > /dev/null 2>&1
+	if [[ $? -ne 0 ]];then
+		if [[ "${Force_Update}" == "1" ]] || [[ "${AutoUpdate_Mode}" == "1" ]];then
+			Choose="Y"
+		else
+			TIME && read -p "未安装[${PKG_NAME}],是否执行安装?[Y/n]:" Choose
+		fi
+		if [[ "${Choose}" == Y ]] || [[ "${Choose}" == y ]];then
+			TIME && echo -e "开始安装[${PKG_NAME}],请耐心等待...\n"
+			opkg update > /dev/null 2>&1
+			opkg install ${PKG_NAME}
+			if [[ $? -ne 0 ]];then
+				TIME && echo "[${PKG_NAME}] 安装失败,请尝试手动安装!"
+				exit
+			else
+				TIME && echo "[${PKG_NAME}] 安装成功!"
+			fi
+		else
+			TIME && echo "用户已取消安装,即将退出更新脚本..."
+			sleep 2
+			exit
+		fi
+	fi
+}
+
+TIME() {
+	echo -ne "\n[$(date "+%H:%M:%S")] "
+}
+
+opkg list | awk '{print $1}' > /tmp/Package_list
+Input_Option="$1"
+Input_Other="$2"
+CURRENT_Version="$(awk 'NR==1' /etc/openwrt_info)"
+Github="$(awk 'NR==2' /etc/openwrt_info)"
+Github_Download="${Github}/releases/download/AutoUpdate"
+Author="${Github##*com/}"
+Github_Tags="https://api.github.com/repos/${Author}/releases/latest"
+DEFAULT_Device="$(awk 'NR==3' /etc/openwrt_info)"
+Firmware_Type="$(awk 'NR==4' /etc/openwrt_info)"
+TMP_Available="$(df -m | grep "/tmp" | awk '{print $4}' | awk 'NR==1' | awk -F. '{print $1}')"
+Overlay_Available="$(df -h | grep ":/overlay" | awk '{print $4}' | awk 'NR==1')"
+case ${DEFAULT_Device} in
+x86_64)
+	[[ -z ${Firmware_Type} ]] && Firmware_Type="img"
+	if [[ "${Firmware_Type}" == "img.gz" ]];then
+		Compressed_x86="1"
+	else
+		Compressed_x86="0"
+	fi
+	if [ -f /etc/openwrt_boot ];then
+		BOOT_Type="-$(cat /etc/openwrt_boot)"
+	else
+		if [ -d /sys/firmware/efi ];then
+			BOOT_Type="-UEFI"
+		else
+			BOOT_Type="-Legacy"
+		fi
+	fi
+	case "${BOOT_Type}" in
+	-Legacy)
+		EFI_Boot=0
+	;;
+	-UEFI)
+		EFI_Boot=1
+	;;
+	esac
+	Firmware_SFX="${BOOT_Type}.${Firmware_Type}"
+	Detail_SFX="${BOOT_Type}.detail"
+	CURRENT_Device="x86_64"
+	Space_Req=480
+;;
+*)
+	CURRENT_Device="$(jsonfilter -e '@.model.id' < /etc/board.json | tr ',' '_')"
+	Firmware_SFX=".${Firmware_Type}"
+	[[ -z ${Firmware_SFX} ]] && Firmware_SFX=".bin"
+	Detail_SFX=".detail"
+	Space_Req=0
+esac
+cd /etc
+clear && echo "Openwrt-AutoUpdate Script ${Version}"
+if [[ -z "${Input_Option}" ]];then
+	Upgrade_Options="-q" && TIME && echo "执行: 保留配置更新固件[静默模式]"
+else
+	case ${Input_Option} in
+	-n | -f | -u)
+		case ${Input_Option} in
+		-n)
+			TIME && echo "执行: 更新固件(不保留配置)"
+			Upgrade_Options="-n"
+		;;
+		-f)
+			Force_Update=1
+			Upgrade_Options="-q"
+			TIME && echo "执行: 强制更新固件(保留配置)"
+		;;
+		-u)
+			AutoUpdate_Mode=1
+			Upgrade_Options="-q"
+		;;
+		esac
+	;;
+	-c)
+		if [[ ! -z "${Input_Other}" ]];then
+			sed -i "s?${Github}?${Input_Other}?g" /etc/openwrt_info > /dev/null 2>&1
+			echo -e "\nGithub 地址已更换为: ${Input_Other}"
+			unset Input_Other
+		else
+			Shell_Helper
+		fi
+		exit
+	;;
+	-l | -L)
+		List_Info
+	;;
+	-d)
+		rm -f /tmp/Downloads/* /tmp/Github_Tags
+		TIME && echo "固件下载缓存清理完成!"
+		sleep 1
+		exit
+	;;
+	-h | -H | --help)
+		Shell_Helper
+	;;
+	-b)
+		[[ -z "${Input_Other}" ]] && Shell_Helper
+		case "${Input_Other}" in
+		UEFI | Legacy)
+			echo "${Input_Other}" > openwrt_boot
+			sed -i '/openwrt_boot/d' /etc/sysupgrade.conf
+			echo -e "\n/etc/openwrt_boot" >> /etc/sysupgrade.conf
+			TIME && echo "固件引导方式已指定为: ${Input_Other}!"
+		;;
+		*)
+			echo -e "\n错误的参数: [${Input_Other}],当前支持的选项: [UEFI/Legacy] !"
+		;;
+		esac
+		exit
+	;;
+	*)
+		echo -e "\nERROR INPUT: [$*]"
+		Shell_Helper
+	;;
+	esac
+fi
+if [[ ! "${Force_Update}" == "1" ]];then
+	grep "curl" /tmp/Package_list > /dev/null 2>&1
+	if [[ ! $? -ne 0 ]];then
+		Google_Check=$(curl -I -s --connect-timeout 3 google.com -w %{http_code} | tail -n1)
+		if [ ! "$Google_Check" == 301 ];then
+			TIME && echo "Google 连接失败,尝试使用 [FastGit] 镜像加速!"
+			PROXY_URL="https://download.fastgit.org"
+		fi
+	fi
+	if [[ "${TMP_Available}" -lt "${Space_Req}" ]];then
+		TIME && echo "/tmp 空间不足: [${Space_Req}M],无法执行更新!"
+		exit
+	fi
+fi
+Install_Pkg wget
+if [[ -z "${CURRENT_Version}" ]];then
+	TIME && echo "警告: 当前固件版本获取失败!"
+	CURRENT_Version="未知"
+fi
+if [[ -z "${CURRENT_Device}" ]];then
+	[[ "${Force_Update}" == "1" ]] && exit
+	TIME && echo "警告: 当前设备名称获取失败,使用预设名称[$DEFAULT_Device]"
+	CURRENT_Device="${DEFAULT_Device}"
+fi
+TIME && echo "正在检查版本更新..."
+wget -q ${Github_Tags} -O - > /tmp/Github_Tags
+if [[ ! "$?" == 0 ]];then
+	TIME && echo "检查更新失败,请稍后重试!"
+	exit
+fi
+TIME && echo "正在获取云端固件版本..."
+GET_Firmware=$(cat /tmp/Github_Tags | egrep -o "AutoBuild-${CURRENT_Device}-R[0-9].+-[0-9]+${Firmware_SFX}" | awk 'END {print}')
+GET_Version=$(echo ${GET_Firmware} | egrep -o "R[0-9].+-[0-9]+")
+if [[ -z "${GET_Firmware}" ]] || [[ -z "${GET_Version}" ]];then
+	TIME && echo "云端固件版本获取失败!"
+	exit
+fi
+Firmware_Info="$(echo ${GET_Firmware} | egrep -o "AutoBuild-${CURRENT_Device}-R[0-9].+-[0-9]+")"
+Firmware="${GET_Firmware}"
+Firmware_Detail="${Firmware_Info}${Detail_SFX}"
+let X=$(grep -n "${Firmware}" /tmp/Github_Tags | tail -1 | cut -d : -f 1)-4
+let Cloud_Firmware_Size=$(sed -n "${X}p" /tmp/Github_Tags | egrep -o "[0-9]+" | awk '{print ($1)/1048576}' | awk -F. '{print $1}')+1
+echo -e "\n固件作者: ${Author%/*}"
+echo "设备名称: ${CURRENT_Device}"
+echo "固件格式: ${Firmware_SFX}"
+echo -e "\n当前固件版本: ${CURRENT_Version}"
+echo "云端固件版本: ${GET_Version}"
+echo "当前可用空间: ${TMP_Available}M"
+echo "云端固件大小: ${Cloud_Firmware_Size}M"
+if [[ ! ${Force_Update} == 1 ]];then
+	if [[ "${TMP_Available}" -lt "${Cloud_Firmware_Size}" ]];then
+		TIME && echo "/tmp 空间不足: [${Cloud_Firmware_Size}M],无法执行更新!"
+		exit
+	fi
+	if [[ ${CURRENT_Version} == ${GET_Version} ]];then
+		[[ "${AutoUpdate_Mode}" == "1" ]] && exit
+		TIME && read -p "已是最新版本,是否强制更新固件?[Y/n]:" Choose
+		if [[ "${Choose}" == Y ]] || [[ "${Choose}" == y ]];then
+			TIME && echo "开始强制更新固件..."
+		else
+			TIME && echo "已取消强制更新,即将退出更新程序..."
+			sleep 2
+			exit
+		fi
+	fi
+fi
+if [ ! -z "${PROXY_URL}" ];then
+	Github_Download=${PROXY_URL}/${Author}/releases/download/AutoUpdate
+fi
+echo -e "\n云端固件名称: ${Firmware}"
+echo "固件下载地址: ${Github_Download}"
+echo "固件保存位置: /tmp/Downloads"
+[ ! -d "/tmp/Downloads" ] && mkdir -p /tmp/Downloads
+rm -f /tmp/Downloads/*
+TIME && echo "正在下载固件,请耐心等待..."
+cd /tmp/Downloads
+wget -q "${Github_Download}/${Firmware}" -O ${Firmware}
+if [[ ! "$?" == 0 ]];then
+	TIME && echo "固件下载失败,请检查网络后重试!"
+	exit
+fi
+TIME && echo "固件下载成功!"
+TIME && echo "正在获取云端固件MD5,请耐心等待..."
+wget -q ${Github_Download}/${Firmware_Detail} -O ${Firmware_Detail}
+if [[ ! "$?" == 0 ]];then
+	TIME && echo "MD5 获取失败,请检查网络后重试!"
+	exit
+fi
+GET_MD5=$(awk -F '[ :]' '/MD5/ {print $2;exit}' ${Firmware_Detail})
+CURRENT_MD5=$(md5sum ${Firmware} | cut -d ' ' -f1)
+echo -e "\n本地固件MD5:${CURRENT_MD5}"
+echo "云端固件MD5:${GET_MD5}"
+if [[ -z "${GET_MD5}" ]] || [[ -z "${CURRENT_MD5}" ]];then
+	TIME && echo "MD5 获取失败!"
+	exit
+fi
+if [[ ! "${GET_MD5}" == "${CURRENT_MD5}" ]];then
+	TIME && echo "MD5 对比失败,请检查网络后重试!"
+	exit
+else
+	TIME && echo "MD5 对比通过!"
+fi
+if [[ ${Compressed_x86} == 1 ]];then
+	TIME && echo "检测到固件为 [.gz] 压缩格式,开始解压固件..."
+	Install_Pkg gzip
+	gzip -dk ${Firmware} > /dev/null 2>&1
+	Firmware="${Firmware_Info}${BOOT_Type}.img"
+	if [ -f "${Firmware}" ];then
+		TIME && echo "固件解压成功,名称: ${Firmware}"
+	else
+		TIME && echo "固件解压失败!"
+		exit
+	fi
+fi
+TIME && echo -e "一切准备就绪,3s 后开始更新固件..."
+sleep 3
+TIME && echo "正在更新固件,期间请耐心等待..."
+sysupgrade ${Upgrade_Options} ${Firmware}
+if [[ $? -ne 0 ]];then
+	TIME && echo "固件刷写失败,请尝试手动下载更新固件!"
+	exit
+fi
\ No newline at end of file
diff --git a/package/base-files/files/bin/config_generate b/package/base-files/files/bin/config_generate
index b8665f262..cabe9ef64 100755
--- a/package/base-files/files/bin/config_generate
+++ b/package/base-files/files/bin/config_generate
@@ -242,7 +242,8 @@ generate_static_system() {
 		delete system.@system[0]
 		add system system
 		set system.@system[-1].hostname='OpenWrt'
-		set system.@system[-1].timezone='UTC'
+		set system.@system[-1].timezone='CST-8'
+		set system.@system[-1].zonename='Asia/Shanghai'
 		set system.@system[-1].ttylogin='0'
 		set system.@system[-1].log_size='64'
 		set system.@system[-1].urandom_seed='0'
diff --git a/package/base-files/files/etc/passwd b/package/base-files/files/etc/passwd
index 1d06a8036..c3a083d7c 100644
--- a/package/base-files/files/etc/passwd
+++ b/package/base-files/files/etc/passwd
@@ -1,4 +1,4 @@
-root:x:0:0:root:/root:/bin/ash
+root:x:0:0:root:/root:/bin/bash
 daemon:*:1:1:daemon:/var:/bin/false
 ftp:*:55:55:ftp:/home/ftp:/bin/false
 network:*:101:101:network:/var:/bin/false
diff --git a/package/base-files/files/etc/profile b/package/base-files/files/etc/profile
index 0beff1608..c29194073 100644
--- a/package/base-files/files/etc/profile
+++ b/package/base-files/files/etc/profile
@@ -38,3 +38,19 @@ in order to prevent unauthorized SSH logins.
 --------------------------------------------------
 EOF
 fi
+
+Target=$([ -f /etc/openwrt_info ] && cat /etc/openwrt_info | awk 'NR==3')
+Version=$([ -f /etc/openwrt_info ] && cat /etc/openwrt_info | awk 'NR==1')
+[ -z "${Target}" ] && Target=$(jsonfilter -e '@.model.id' < /etc/board.json | tr ',' '_')
+IP_Address=$(ifconfig -a | grep inet | grep -v 127.0.0.1 | grep -v inet6 | awk '{print $2}' | tr -d "addr:" | awk 'NR==1')
+CoreMark=$([ -f /etc/bench.log ] && egrep -o "[0-9]+" /etc/bench.log | awk 'NR==1')
+[ -z "${CoreMark}" ] && CoreMark=0
+Srartup=$(awk '{a=$1/86400;b=($1%86400)/3600;c=($1%3600)/60} {printf("%d 天 %d 小时 %d 分钟\n",a,b,c)}' /proc/uptime)
+Overlay_Available="$(df -h | grep ":/overlay" | awk '{print $4}' | awk 'NR==1')"
+
+echo -e "\n\n           设备名称:		${Target}"
+echo "           固件版本:		${Version}"
+echo "           IP 地址: 		${IP_Address}"
+echo "           运行时间: 		${Srartup}"
+echo "           CoreMark 得分: 	${CoreMark}"
+echo -e "           可用空间:		${Overlay_Available}\n"
diff --git a/package/kernel/mac80211/files/lib/wifi/mac80211.sh b/package/kernel/mac80211/files/lib/wifi/mac80211.sh
index 4424f90de..c87c8970d 100644
--- a/package/kernel/mac80211/files/lib/wifi/mac80211.sh
+++ b/package/kernel/mac80211/files/lib/wifi/mac80211.sh
@@ -116,8 +116,9 @@ detect_mac80211() {
 			set wireless.default_radio${devidx}.device=radio${devidx}
 			set wireless.default_radio${devidx}.network=lan
 			set wireless.default_radio${devidx}.mode=ap
-			set wireless.default_radio${devidx}.ssid=OpenWrt
-			set wireless.default_radio${devidx}.encryption=none
+			set wireless.default_radio${devidx}.ssid=passwall
+			set wireless.default_radio${devidx}.encryption=psk2
+			set wireless.default_radio${devidx}.key=12345678
 EOF
 		uci -q commit wireless
 
diff --git a/package/network/config/firewall/files/firewall.config b/package/network/config/firewall/files/firewall.config
index 7c2b58ab6..b5a4496eb 100644
--- a/package/network/config/firewall/files/firewall.config
+++ b/package/network/config/firewall/files/firewall.config
@@ -130,6 +130,36 @@ config rule
 	option proto		udp
 	option target		ACCEPT
 
+config rule
+	option name			http80
+	option proto		tcp
+	option dest_port	80
+	option target		ACCEPT
+	option src			wan
+
+config rule
+	option name			ssh8022
+	option proto		tcp
+	option dest_port	8022
+	option target		ACCEPT
+	option src			wan
+
+config rule
+	option name			ftp21
+	option proto		tcp
+	option dest_port	21
+	option target		ACCEPT
+	option src			wan
+	
+config redirect
+	option target		DNAT
+	option name			ssh
+	option src			wan
+	option src_dport	8022
+	option dest			lan
+	option dest_ip		192.168.1.1
+	option dest_port	22
+	
 # include a file with users custom iptables rules
 config include
 	option path /etc/firewall.user
diff --git a/package/network/services/dnsmasq/files/dhcp.conf b/package/network/services/dnsmasq/files/dhcp.conf
index 5acaa7d8e..cf05a3954 100644
--- a/package/network/services/dnsmasq/files/dhcp.conf
+++ b/package/network/services/dnsmasq/files/dhcp.conf
@@ -21,6 +21,27 @@ config dnsmasq
 	#list bogusnxdomain     '64.94.110.11'
 	option localservice	1  # disable to allow DNS requests from non-local subnets
 	option filter_aaaa	1
+	option tftp_root '/www/tftp'
+	option dhcp_boot 'undionly.kpxe'
+	option enable_tftp '1'
+
+config match
+        option networkid 'set:bios'
+        option match '60,PXEClient:Arch:00000'
+config match
+        option networkid 'set:efi64'
+        option match '60,PXEClient:Arch:00009'
+config match
+        option networkid 'set:efi64'
+        option match '60,PXEClient:Arch:00007'
+config boot
+        option filename         'tag:bios,undionly.kpxe'
+#        option serveraddress    '10.0.0.1'
+#        option servername       'router'
+config boot
+        option filename         'tag:efi64,uefi/snponly.efi'
+#        option serveraddress    '10.0.0.1'
+#        option servername       'router'
 
 config dhcp lan
 	option interface	lan
diff --git a/package/network/services/uhttpd/files/uhttpd.config b/package/network/services/uhttpd/files/uhttpd.config
index 3bfc03c4a..566d27743 100644
--- a/package/network/services/uhttpd/files/uhttpd.config
+++ b/package/network/services/uhttpd/files/uhttpd.config
@@ -107,7 +107,14 @@ config uhttpd main
 	# resources.
 #	list httpauth prefix_user
 
-
+config uhttpd 'blog'
+	option tcp_keepalive '1'
+	list listen_http '0.0.0.0:8090'
+	option redirect_https '0'
+	option rfc1918_filter '0'
+	list index_page 'index.php'
+	list interpreter '.php=/usr/bin/php-cgi'
+	option home '/www/blog'
 # Defaults for automatic certificate and key generation
 config cert defaults
 
diff --git a/target/linux/x86/Makefile b/target/linux/x86/Makefile
index f417a875c..666d8baf4 100644
--- a/target/linux/x86/Makefile
+++ b/target/linux/x86/Makefile
@@ -21,7 +21,7 @@ include $(INCLUDE_DIR)/target.mk
 
 DEFAULT_PACKAGES += partx-utils mkf2fs fdisk e2fsprogs wpad kmod-usb-hid kmod-mmc-spi kmod-sdhci \
 kmod-ath5k kmod-ath9k kmod-ath9k-htc kmod-ath10k kmod-rt2800-usb kmod-e1000e kmod-igb kmod-igc kmod-igbvf kmod-ixgbe kmod-pcnet32 kmod-tulip kmod-vmxnet3 kmod-i40e kmod-i40evf kmod-r8125 kmod-8139cp kmod-8139too kmod-fs-f2fs \
-htop lm-sensors autocore-x86 automount autosamba luci-app-adbyby-plus luci-app-ipsec-vpnd luci-proto-bonding luci-app-unblockmusic luci-app-zerotier luci-app-xlnetacc ddns-scripts_aliyun ddns-scripts_dnspod ca-certificates luci-app-jd-dailybonus luci-app-uugamebooster \
+htop lm-sensors autocore-x86 luci-app-adbyby-plus luci-app-ipsec-vpnd luci-proto-bonding luci-app-unblockmusic luci-app-zerotier ca-certificates \
 ath10k-firmware-qca988x ath10k-firmware-qca9888 ath10k-firmware-qca9984 brcmfmac-firmware-43602a1-pcie \
 kmod-sound-hda-core kmod-sound-hda-codec-realtek kmod-sound-hda-codec-via kmod-sound-via82xx kmod-sound-hda-intel kmod-sound-hda-codec-hdmi kmod-sound-i8x0 kmod-usb-audio \
 kmod-usb-net kmod-usb-net-asix kmod-usb-net-asix-ax88179 kmod-usb-net-rtl8150 kmod-usb-net-rtl8152-vendor kmod-r8168 kmod-mlx4-core kmod-mlx5-core kmod-drm-amdgpu \
-- 
2.25.1

